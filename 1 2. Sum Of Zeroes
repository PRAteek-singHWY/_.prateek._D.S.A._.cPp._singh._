#include <bits/stdc++.h> 
// TC -> O(N^2) SC -> O(1)

int checker(int value,int count){
    if(value==0){
        count = 0;
    }
    else{
        count++;
    }
    return count;
}

int counter(vector<vector<int>> &mat, int ri, int ci ,int rows, int cols){
    int counter1 = 0;
    int counter2 = 0;
    int counter3 = 0;
    int counter4 = 0;
    //up 
    if( ri-1>=0 ){
         counter1=checker(mat[ri-1][ci],counter1);
    }
    //left 
    if(ci-1>=0){
        counter2=checker(mat[ri][ci-1],counter2);
        }
    //down
    if(ri+1<rows){

        counter3=checker(mat[ri+1][ci],counter3);
        }
    //right 
    if(ci+1<cols){
        counter4=checker(mat[ri][ci+1],counter4);
        }
    return ( counter1 + counter2 + counter3 + counter4 ) ;
}
int coverageOfMatrix(vector<vector<int>> &mat) {
    // Write your code here.
    int count = 0 ;
    int rows = mat.size();
    int cols = mat[0].size();
    int ri;
    int ci;
    for(int i=0;i<rows;i++){
        for(int j=0;j<cols;j++){
            if(mat[i][j]==0){
                ri = i;
                ci = j;
                count+=counter(mat,ri,ci,rows,cols);
            }
        }
    }
    return count;  
}
